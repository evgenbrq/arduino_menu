/* =============== ПОДКЛЮЧАЕМ НЕОБХОДИМЫЕ БИБЛИОТЕКИ =============== */ 

#include <EncButton.h>
#include <LiquidCrystal_I2C.h>
//#include<GyverEncoder.h>

/* =============== ПОДКЛЮЧАЕМ НЕОБХОДИМЫЕ БИБЛИОТЕКИ =============== */ 



/* =============== ИНИЦИАЛИЗИРУЕМ НАСТРОЙКИ =============== */ 

#define CLK 2
#define DT 3
#define SW 4

//Encoder enc1(CLK, DT, SW);
EncButton<EB_TICK, 2, 3, 4> enc1;

LiquidCrystal_I2C lcd(0x27, 16, 2); // Инициализация дисплея 16*2
#define ROWS 4
#define COLS 3

struct ListMenu
{
  uint8_t parent; //родитель
  uint8_t count; //кол-во элементов в массиве
  uint8_t unique; //уникальный номер элемента
  char name[20]; //имя элемента
};

ListMenu menu[13]; //Инициализация массива структур для меню

// =============== Работа с меню  =============== //

bool inMenu = false; 
uint8_t unique_elem_menu = 1; //уникальный номер меню, который выбран
uint8_t num_str; //сохраняем уникальный номер для каждого подменю, который выбран
uint8_t startt; //уникальный номер элемента с которого начинается уровень меню
uint8_t num = 0; //номер выбранного элемента

// =============== Работа с меню  =============== //

void encISR()
{
  //enc1.tick();
  enc1.tickISR();
}


/* =============== ИНИЦИАЛИЗИРУЕМ НАСТРОЙКИ =============== */ 

void setup() {
  //enc1.setType(TYPE2);
  //attachInterrupt(0, encISR, CHANGE);
  //attachInterrupt(1, encISR, CHANGE);
  
  lcd.init();
  lcd.backlight();
  lcd.noBlink();

  menu[0].parent = -1;
  menu[0].count = 4;
  menu[0].unique = 0;
  strcpy(menu[0].name, "Меню");

  menu[1].parent = 0;
  menu[1].count = 2;
  menu[1].unique = 1;
  strcpy(menu[1].name, "Edit data");

  menu[2].parent = 0;
  menu[2].count = 1;
  menu[2].unique = 2;
  strcpy(menu[2].name, "LCD");

  menu[3].parent = 0;
  menu[3].count = 2;
  menu[3].unique = 3;
  strcpy(menu[3].name, "Programm");

  menu[4].parent = 0;
  menu[4].count = 3;
  menu[4].unique = 4;
  strcpy(menu[4].name, "Testings");

  menu[5].parent = 1;
  menu[5].count = 0;
  menu[5].unique = 5;
  strcpy(menu[5].name, "Vlazjnost");

  menu[6].parent = 1;
  menu[6].count = 0;
  menu[6].unique = 6;
  strcpy(menu[6].name, "Davlenie");

  menu[7].parent = 2;
  menu[7].count = 0;
  menu[7].unique = 7;
  strcpy(menu[7].name, "Yarkost");

  menu[8].parent = 3;
  menu[8].count = 0;
  menu[8].unique = 8;
  strcpy(menu[8].name, "Pr1");

  menu[9].parent = 3;
  menu[9].count = 0;
  menu[9].unique = 9;
  strcpy(menu[9].name, "Pr2");

  menu[10].parent = 4;
  menu[10].count = 0;
  menu[10].unique = 10;
  strcpy(menu[10].name, "Dt1");

  menu[11].parent = 4;
  menu[11].count = 0;
  menu[11].unique = 11;
  strcpy(menu[11].name, "Dt2");

  menu[12].parent = 4;
  menu[12].count = 0;
  menu[12].unique = 12;
  strcpy(menu[12].name, "Dt3");

  lcd.clear();
  lcd.setCursor(3, 0);          // Установить курсор на первыю строку
  lcd.print("Project SS");    // Вывести текст
  lcd.setCursor(4, 1);          // Установить курсор на вторую строку
  lcd.print("Teplica");
  delay(2000);

  ShowDataDisplay();
}

void loop() {
  CheckEncoder();
}

void CheckEncoder()
{
  enc1.tick();
  if(!inMenu && (enc1.left() || enc1.right())){
    inMenu = true;
    num_str = unique_elem_menu;
    startt = num_str;
    lcd.clear();
    Print(num, startt);
  }
  switch(inMenu)
  {
    case true:

      if(enc1.right())
      {
        if (num >= 1) {
          if (menu[startt + 1].parent != menu[startt + 2].parent) { //проверяем последние ли это элементы для вывода на дисплей
            num = 0;                                       //если начальная позиция + кол-во элементов за минусом один, т.к экран на две строки и при переходе мы
            startt = num_str;                               //прибавляем к позициям число 2 и все это сравниваем со след позицией, т.е последней в этом списке
            Print(num, startt);
            break;
          }
          if(menu[startt + 1].parent == menu[startt+2].parent)
          num = 0;
          startt += 2;
        }
        else if (num == 0 && menu[startt+1].parent != menu[startt].parent)
        {
          num = 0;
          startt = num_str;
        } else
        {
          num++;
        }
        Print(num, startt);
      } else if(enc1.left())
      {
        if (num <= 0) {
          if (num_str == startt && menu[menu[num_str].parent].count % 2 == 0) {
            num = 1;
            startt = startt + menu[menu[num_str].parent].count - 2;
          } else if (num_str == startt && menu[menu[num_str].parent].count % 2 == 1) 
          {
            num = 0;
            startt = startt + menu[menu[num_str].parent].count - 1;
          } else 
          {
            num = 1;
            startt -= 2;
          }
        } else 
        {
          num--;
        }
        Print(num, startt);
      } else if(enc1.click())
      {
        SearchUniqueElem(true, (startt+num));
        DefaultDataMenu();
        Print(num, startt);
      } else if(enc1.leftH() && menu[startt+num].parent != 0)
      {
        SearchUniqueElem(false, (startt+num));
        DefaultDataMenu();
        Print(num, startt);
      }
      break;
    case false:
      ShowDataDisplay();
      break;
  }
}

void ShowDataDisplay()
{
  lcd.clear();
  lcd.setCursor(0, 0);          // Установить курсор на первыю строку
  lcd.print("Tmp:");    // Вывести текст
  lcd.setCursor(5, 0);
  lcd.print("15");
  lcd.setCursor(8, 0);
}

void SearchUniqueElem(bool df, int el)
{
  if(df) // вперед по меню
  {
    for (int i = 0; i < 13; i++) {
      if (menu[i].parent == el) {
        unique_elem_menu = menu[i].unique;
        break;
      }
    }
  }else
  {
    for (int i = 0; i < 13; i++) {
      if (menu[i].parent == menu[menu[el].parent].parent) {
        unique_elem_menu = menu[i].unique;
        break;
      }
    }
  }
}

void DefaultDataMenu()
{
  num_str = unique_elem_menu;
  startt = num_str;
  num = 0;
}

void Print(int num, int s) {
  lcd.clear();
  switch (num) {
    case 0:
      if (menu[s].parent != menu[s + 1].parent) {
        lcd.print(">");
        lcd.setCursor(2, 0);          // Установить курсор на первыю строку
        lcd.print(menu[s].name);    // Вывести текст
        break;
      }
      lcd.setCursor(0, 0);          // Установить курсор на первыю строку
      lcd.print(">");
      lcd.setCursor(2, 0);          // Установить курсор на первыю строку
      lcd.print(menu[s].name);    // Вывести текст
      lcd.setCursor(0, 1);          // Установить курсор на вторую строку
      lcd.print(menu[s + 1].name);
      break;
    case 1:
      lcd.setCursor(0, 0);          // Установить курсор на первыю строку
      lcd.print(menu[s].name);    // Вывести текст
      lcd.setCursor(0, 1);          // Установить курсор на первыю строку
      lcd.print(">");
      lcd.setCursor(1, 1);          // Установить курсор на вторую строку
      lcd.print(menu[s + 1].name);
      break;
  }
}
