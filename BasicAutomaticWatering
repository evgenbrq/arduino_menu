/* =============== ИНИЦИАЛИЗИРУЕМ НАСТРОЙКИ =============== */ 

#define SWITCH_LEVEL 0      // реле: 1 - высокого уровня (или мосфет), 0 - низкого
#define TIMER_START 1       // Отсчёт периода с момента ВЫКЛЮЧЕНИЯ помпы
#define PIN_NASOS 5         // Пин с подключенным насосом


// =============== Настройки для насоса  =============== //

uint32_t nasos_timers; // Запоминает время после ВЫКЛЮЧЕНИЯ насоса, для отсчета включения
uint32_t pumping_time; // Кол-во времени, отведенное на полив (секунды)
boolean nasos_state; // Состояние насоса (включен\выключен)
uint32_t pump_sensor_on; // Значение с датчика влажности, при пороге которого будет включаться насос
uint32_t pump_timer_sleep; // Запоминания секунд во время выключения насоса, чтобы насос не включился, если значение с датчика до сих пор не изменилось
uint32_t count_minute_sleep; // Колличество миллисекунд, которое ждем прежде чем снова включить насос(нужно чтобы корректно обновить данные с датчика влажности)

boolean startFlag = true; // после включения ардуино через эту переменную мы запоминаем время инициализации для последующего включения насоса

int sensorPin = A0; // пин для датчика влажности

// =============== Настройки для насоса  =============== //


/* =============== ИНИЦИАЛИЗИРУЕМ НАСТРОЙКИ =============== */ 

void setup() {
  Serial.begin(9600);
  // --------------------- КОНФИГУРИРУЕМ ПИН ---------------------//
  pumping_time = 8;                            // время работы насоса, секунд
  pump_sensor_on = 700;                       // порог включения насоса
  pinMode(PIN_NASOS, OUTPUT);              // Пин насоса на выход
  digitalWrite(PIN_NASOS, !SWITCH_LEVEL);  // Выключаем пин насоса
  // --------------------- КОНФИГУРИРУЕМ ПИНЫ ---------------------//
  count_minute_sleep = 60000; // Время в милисекундах
}

void loop() {
  CheckForTurnOff();
  CheckForTurnOn();
}

void CheckForTurnOff() // проверка для выключения насоса
{
  if (pumping_time > 0
      && millis() - nasos_timers >= pumping_time * 1000
      && (nasos_state == SWITCH_LEVEL) ) {
    nasos_state = !SWITCH_LEVEL;
    digitalWrite(PIN_NASOS, !SWITCH_LEVEL); // Выключаем насос
    pump_timer_sleep = millis();
  }
}

void CheckForTurnOn() { // включаем насос
  int sensorValue;
  sensorValue = analogRead(sensorPin);
  Serial.println("Vlajnost: "+sensorValue);
  delay(1000);
  if (startFlag ||
      ((pump_sensor_on < sensorValue) && (sensorValue < 900)
       && (nasos_state != SWITCH_LEVEL) && millis() - pump_timer_sleep >= count_minute_sleep)) 
  {
    nasos_state = SWITCH_LEVEL;
    digitalWrite(PIN_NASOS, SWITCH_LEVEL);  // Включаем насос
    nasos_timers = millis();
  }
  startFlag = false;
}
