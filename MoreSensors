/* =============== ИНИЦИАЛИЗИРУЕМ НАСТРОЙКИ =============== */ 

#define SWITCH_LEVEL 1      // реле: 1 - высокого уровня (или мосфет), 0 - низкого
#define TIMER_START 1       // Отсчёт периода с момента ВЫКЛЮЧЕНИЯ помпы
#define PIN_NASOS 5         // Пин с подключенным насосом
#define COUNT_NASOS 4    // Кол-во подключенных насосов

// =============== Настройки для насоса  =============== //

boolean nasos_state[COUNT_NASOS]; // Состояние насосов (включен\выключен)
uint32_t pump_sensor_up[COUNT_NASOS]; // Верхний порог значения с датчика влажности, при котором будут выключаться насосы
uint32_t pump_sensor_down[COUNT_NASOS];  // Нижний порог значения с датчика влажности, при котором будут выключаться насосы

int sensorPin[COUNT_NASOS]; // пин для датчика влажности
  
// =============== Настройки для насоса  =============== //


/* =============== ИНИЦИАЛИЗИРУЕМ НАСТРОЙКИ =============== */ 

void setup() {
  Serial.begin(9600);
  // --------------------- КОНФИГУРИРУЕМ ПИНЫ ---------------------//
  sensorPin[0] = A0; // Пин для 1 датчика для 1 насоса
  sensorPin[1] = A1; // Пин для 2 датчика для 2 насоса
  //sensorPin[2] = A2; // Пин для 3 датчика для 3 насоса
  //sensorPin[3] = A3; // Пин для 4 датчика для 4 насоса
  pump_sensor_up[0] = 600;                       // Верхний порог для выключения насоса 1
  pump_sensor_down[0] = 300;                       // Нижний порог для выключения насоса 1
  pump_sensor_up[1] = 600;                       // Верхний порог для выключения насоса 2
  pump_sensor_down[1] = 300;                       // Нижний порог для выключения насоса 2
  pump_sensor_up[2] = 800;                       // Верхний порог для выключения насоса 3 
  pump_sensor_down[2] = 300;                       // Нижний порог для выключения насоса 3
  pump_sensor_up[3] = 800;                       // Верхний порог для выключения насоса 4 
  pump_sensor_down[3] = 300;                       // Нижний порог для выключения насоса 4
  for (byte i =0; i < COUNT_NASOS; i++){
    nasos_state[i] = !SWITCH_LEVEL;
    pinMode(PIN_NASOS + i, OUTPUT);              // Пин насоса на выход
    digitalWrite(PIN_NASOS + i, !SWITCH_LEVEL);  // Выключаем пин насоса
  }
  // --------------------- КОНФИГУРИРУЕМ ПИНЫ ---------------------//
}

void loop() {
  CheckState();
}

void CheckState() {
  for (byte i = 0; i < COUNT_NASOS; i++){
    int sensorValue = analogRead(sensorPin[i]);
    Serial.println("Datchik " + String(i+1) + "=" + sensorValue);
    if (sensorValue >= pump_sensor_up[i]){
      Serial.println("Nasos " + String(i+1) + " turn on");
      digitalWrite(PIN_NASOS + i, SWITCH_LEVEL);
    } else if (sensorValue <= pump_sensor_down[i]){
      Serial.println("Nasos " + String(i+1) + " turn off");
      digitalWrite(PIN_NASOS + i, !SWITCH_LEVEL);
    }
  }
  delay(1000);
}
