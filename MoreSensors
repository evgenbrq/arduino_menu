/* =============== ИНИЦИАЛИЗИРУЕМ НАСТРОЙКИ =============== */ 

#define SWITCH_LEVEL 0      // реле: 1 - высокого уровня (или мосфет), 0 - низкого
#define TIMER_START 1       // Отсчёт периода с момента ВЫКЛЮЧЕНИЯ помпы
#define PIN_NASOS 5         // Пин с подключенным насосом
#define COUNT_NASOS 3		// Кол-во подключенных насосов

// =============== Настройки для насоса  =============== //

boolean nasos_state[COUNT_NASOS]; // Состояние насосов (включен\выключен)
uint32_t pump_sensor_up; // Верхний порог значения с датчика влажности, при котором будут выключаться насосы
uint32_t mump_sensor_down;	// Нижний порог значения с датчика влажности, при котором будут выключаться насосы

int sensorPin[COUNT_NASOS]; // пин для датчика влажности

// =============== Настройки для насоса  =============== //


/* =============== ИНИЦИАЛИЗИРУЕМ НАСТРОЙКИ =============== */ 

void setup() {
  Serial.begin(9600);
  // --------------------- КОНФИГУРИРУЕМ ПИНЫ ---------------------//
  sensorPin[0] = A0; // Пин для 1 датчика для 1 насоса
  sensorPin[1] = A1; // Пин для 2 датчика для 2 насоса
  sensorPin[2] = A2; // Пин для 3 датчика для 3 насоса
  pump_sensor_up[0] = 800;                       // Верхний порог для выключения насоса 1
  pump_sensor_off[0] = 300;                       // Нижний порог для выключения насоса 1
  pump_sensor_up[1] = 800;                       // Верхний порог для выключения насоса 2
  pump_sensor_off[1] = 300;                       // Нижний порог для выключения насоса 2
  pump_sensor_up[2] = 800;                       // Верхний порог для выключения насоса 3 
  pump_sensor_off[2] = 300;                       // Нижний порог для выключения насоса 3
  for (byte i =0; i < COUNT_NASOS; i++){
    pinMode(PIN_NASOS + i, OUTPUT);              // Пин насоса на выход
    digitalWrite(PIN_NASOS + i, !SWITCH_LEVEL);  // Выключаем пин насоса
  }
  // --------------------- КОНФИГУРИРУЕМ ПИНЫ ---------------------//
}

void loop() {
  CheckForTurnOff();
  CheckForTurnOn();
}

void CheckForTurnOff() // проверка для выключения насоса
{
  for (byte i = 0; i < COUNT_NASOS; i++){
    int sensorValue;
	sensorValue = analogRead(sensorPin[i]);
	Serial.println(sensorValue);
	delay(1000);
	if ((pump_sensor_up[i] < sensorValue) && (pump_sensor_down[i] < sensorValue) && (nasos_state[i] == SWITCH_LEVEL) ) {
		nasos_state[i] = !SWITCH_LEVEL;
		digitalWrite(PIN_NASOS + i, !SWITCH_LEVEL); // Выключаем насос
	}
  }
}

void CheckForTurnOn() { // включаем насос
  for (byte i = 0; i < COUNT_NASOS; i++){
    int sensorValue;
	sensorValue = analogRead(sensorPin[i]);
	Serial.println(sensorValue);
	delay(1000);
	if ((pump_sensor_up[i] > sensorValue) && (pump_sensor_down[i] > sensorValue)
		&& (nasos_state[i] != SWITCH_LEVEL)) 
	{
		nasos_state[i] = SWITCH_LEVEL;
		digitalWrite(PIN_NASOS + i, SWITCH_LEVEL);  // Включаем насос
	}
  }
}
